Testing xire-basics ...                                          Testing xire-basics ===========================================================
<define-xire-macro>------------------------------------------------------------
test It should define a xire macro in the current context., expects (#f (< (original-form) >)) ==> ok
<xire-context>-----------------------------------------------------------------
test It should exist., expects #t ==> ok
test It should have some entries in its macro table by default., expects #t ==> ok
test It should be a parameter., expects (overridden <xire-context>) ==> ok
<xire-context-copy>------------------------------------------------------------
test It should copy the current context, expects ((#t #t) (#f #t) ((a) (a b))) ==> ok
test It should copy a given context, expects ((#t #f #f) (#f #t #t) (#f #f #t) ((a) (b) (b c))) ==> ok
<xire-lookup-macro>------------------------------------------------------------
test It should return #f if there is no macro with the given name., expects #f ==> ok
test It should return the expander of a registered macro., expects (expanded-form (original-form)) ==> ok
test It should look up macro from a given context., expects ((default-context #f given-context #f) (default-context #f given-context #t)) ==> ok
<xire-register-macro!>---------------------------------------------------------
test It should register a macro into the current context., expects 1 ==> ok
test It should register a macro into a given context., expects ((default-context 0 given-context 0) (default-context 0 given-context 1)) ==> ok
passed.
passed.
