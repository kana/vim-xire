#!/usr/bin/env gosh
; Version: @@VERSION@@
; Copyright (C) 2009-2010 kana <http://whileimautomaton.net/>
; License: So-called MIT/X license  {{{
;     Permission is hereby granted, free of charge, to any person obtaining
;     a copy of this software and associated documentation files (the
;     "Software"), to deal in the Software without restriction, including
;     without limitation the rights to use, copy, modify, merge, publish,
;     distribute, sublicense, and/or sell copies of the Software, and to
;     permit persons to whom the Software is furnished to do so, subject to
;     the following conditions:
;
;     The above copyright notice and this permission notice shall be included
;     in all copies or substantial portions of the Software.
;
;     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
;     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
;     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
;     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
;     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
;     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
; }}}
; Misc.  ;{{{1
; Modules  ;{{{2

(use text.tree)
(use util.match)




(define (x->vson x)  ;{{{2
  ; Convert Scheme object X into a string which expresses an object in Vim
  ; script, i.e., Vim script object notation (VSON).
  (match x
    ((? integer? x) (x->string x))
    ((? string? x) (with-output-to-string (lambda () (write x))))
    ((? symbol? x) (symbol->string x))
    (('quote x) (x->string x))  ; FIXME: Need review.
    ; Other cases are not supported.
    ))








; Built-in Ex Commands  ;{{{1
(define-constant %builtin-ex-commands  ;{{{2
  '(; The followings are translated from "cmdnames" in Vim 7.2.320.  ;{{{
    (Next (EXTRA RANGE NOTADR COUNT BANG EDITCMD ARGOPT TRLBAR))
    (Print (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN))
    (X (TRLBAR))
    (abbreviate (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (abclear (EXTRA TRLBAR CMDWIN))
    (aboveleft (NEEDARG EXTRA NOTRLCOM))
    (all (RANGE NOTADR COUNT TRLBAR))
    (amenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (anoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (append (BANG RANGE ZEROR TRLBAR CMDWIN MODIFY))
    (argadd (BANG NEEDARG RANGE NOTADR ZEROR FILES TRLBAR))
    (argdelete (BANG RANGE NOTADR FILES TRLBAR))
    (argdo (BANG NEEDARG EXTRA NOTRLCOM))
    (argedit (BANG NEEDARG RANGE NOTADR FILE1 EDITCMD TRLBAR))
    (argglobal (BANG FILES EDITCMD ARGOPT TRLBAR))
    (arglocal (BANG FILES EDITCMD ARGOPT TRLBAR))
    (args (BANG FILES EDITCMD ARGOPT TRLBAR))
    (argument (BANG RANGE NOTADR COUNT EXTRA EDITCMD ARGOPT TRLBAR))
    (ascii do_ascii (TRLBAR SBOXOK CMDWIN))
    (augroup (BANG WORD1 TRLBAR CMDWIN))
    (aunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (autocmd (BANG EXTRA NOTRLCOM USECTRLV CMDWIN))
    (bNext (BANG RANGE NOTADR COUNT TRLBAR))
    (badd (NEEDARG FILE1 EDITCMD TRLBAR CMDWIN))
    (ball (RANGE NOTADR COUNT TRLBAR))
    (bdelete (BANG RANGE NOTADR BUFNAME COUNT EXTRA TRLBAR))
    (behave (NEEDARG WORD1 TRLBAR CMDWIN))
    (belowright (NEEDARG EXTRA NOTRLCOM))
    (bfirst (BANG RANGE NOTADR TRLBAR))
    (blast (BANG RANGE NOTADR TRLBAR))
    (bmodified (BANG RANGE NOTADR COUNT TRLBAR))
    (bnext (BANG RANGE NOTADR COUNT TRLBAR))
    (botright (NEEDARG EXTRA NOTRLCOM))
    (bprevious (BANG RANGE NOTADR COUNT TRLBAR))
    (break (TRLBAR SBOXOK CMDWIN))
    (breakadd (EXTRA TRLBAR CMDWIN))
    (breakdel (EXTRA TRLBAR CMDWIN))
    (breaklist (EXTRA TRLBAR CMDWIN))
    (brewind (BANG RANGE NOTADR TRLBAR))
    (browse (NEEDARG EXTRA NOTRLCOM CMDWIN))
    (bufdo (BANG NEEDARG EXTRA NOTRLCOM))
    (buffer (BANG RANGE NOTADR BUFNAME BUFUNL COUNT EXTRA TRLBAR))
    (buffers buflist_list (BANG TRLBAR CMDWIN))
    (bunload (BANG RANGE NOTADR BUFNAME COUNT EXTRA TRLBAR))
    (bwipeout (BANG RANGE NOTADR BUFNAME BUFUNL COUNT EXTRA TRLBAR))
    (cNext (RANGE NOTADR COUNT TRLBAR BANG))
    (cNfile (RANGE NOTADR COUNT TRLBAR BANG))
    (cabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cabclear (EXTRA TRLBAR CMDWIN))
    (caddbuffer (RANGE NOTADR WORD1 TRLBAR))
    (caddexpr (NEEDARG WORD1 NOTRLCOM TRLBAR))
    (caddfile (TRLBAR FILE1))
    (call (RANGE NEEDARG EXTRA NOTRLCOM SBOXOK CMDWIN))
    (catch (EXTRA SBOXOK CMDWIN))
    (cbuffer (BANG RANGE NOTADR WORD1 TRLBAR))
    (cc (RANGE NOTADR COUNT TRLBAR BANG))
    (cclose (RANGE NOTADR COUNT TRLBAR))
    (cd (BANG FILE1 TRLBAR CMDWIN))
    (center (TRLBAR RANGE WHOLEFOLD EXTRA CMDWIN MODIFY))
    (cexpr (NEEDARG WORD1 NOTRLCOM TRLBAR BANG))
    (cfile (TRLBAR FILE1 BANG))
    (cfirst (RANGE NOTADR COUNT TRLBAR BANG))
    (cgetbuffer (RANGE NOTADR WORD1 TRLBAR))
    (cgetexpr (NEEDARG WORD1 NOTRLCOM TRLBAR))
    (cgetfile (TRLBAR FILE1))
    (change (BANG WHOLEFOLD RANGE COUNT TRLBAR CMDWIN MODIFY))
    (changes (TRLBAR CMDWIN))
    (chdir (BANG FILE1 TRLBAR CMDWIN))
    (checkpath (TRLBAR BANG CMDWIN))
    (checktime (RANGE NOTADR BUFNAME COUNT EXTRA TRLBAR))
    (clast (RANGE NOTADR COUNT TRLBAR BANG))
    (clist qf_list (BANG EXTRA TRLBAR CMDWIN))
    (close (BANG TRLBAR CMDWIN))
    (cmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cmapclear (EXTRA TRLBAR CMDWIN))
    (cmenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cnewer qf_age (RANGE NOTADR COUNT TRLBAR))
    (cnext (RANGE NOTADR COUNT TRLBAR BANG))
    (cnfile (RANGE NOTADR COUNT TRLBAR BANG))
    (cnoreabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cnoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cnoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (colder qf_age (RANGE NOTADR COUNT TRLBAR))
    (colorscheme (NEEDARG WORD1 TRLBAR CMDWIN))
    (comclear (TRLBAR CMDWIN))
    (command (EXTRA BANG NOTRLCOM USECTRLV CMDWIN))
    (compiler (BANG TRLBAR WORD1 CMDWIN))
    (confirm (NEEDARG EXTRA NOTRLCOM CMDWIN))
    (continue (TRLBAR SBOXOK CMDWIN))
    (copen (RANGE NOTADR COUNT TRLBAR))
    (copy (RANGE WHOLEFOLD EXTRA TRLBAR CMDWIN MODIFY))
    (cpfile (RANGE NOTADR COUNT TRLBAR BANG))
    (cprevious (RANGE NOTADR COUNT TRLBAR BANG))
    (cquit (TRLBAR BANG))
    (crewind (RANGE NOTADR COUNT TRLBAR BANG))
    (cscope do_cscope (EXTRA NOTRLCOM XFILE))
    (cstag do_cstag (BANG TRLBAR WORD1))
    (cunabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (cwindow (RANGE NOTADR COUNT TRLBAR))
    (debug (NEEDARG EXTRA NOTRLCOM SBOXOK CMDWIN))
    (debuggreedy (RANGE NOTADR ZEROR TRLBAR CMDWIN))
    (delcommand (NEEDARG WORD1 TRLBAR CMDWIN))
    (delete (RANGE WHOLEFOLD REGSTR COUNT TRLBAR CMDWIN MODIFY))
    (delfunction (NEEDARG WORD1 CMDWIN))
    (delmarks (BANG EXTRA TRLBAR CMDWIN))
    (diffget (RANGE EXTRA TRLBAR MODIFY))
    (diffoff (BANG TRLBAR))
    (diffpatch (EXTRA FILE1 TRLBAR MODIFY))
    (diffput (RANGE EXTRA TRLBAR))
    (diffsplit (EXTRA FILE1 TRLBAR))
    (diffthis (TRLBAR))
    (diffupdate (TRLBAR))
    (digraphs (EXTRA TRLBAR CMDWIN))
    (display (EXTRA NOTRLCOM TRLBAR SBOXOK CMDWIN))
    (djump (BANG RANGE DFLALL WHOLEFOLD EXTRA))
    (dlist (BANG RANGE DFLALL WHOLEFOLD EXTRA CMDWIN))
    (doautoall (EXTRA TRLBAR CMDWIN))
    (doautocmd (EXTRA TRLBAR CMDWIN))
    (drop (FILES EDITCMD NEEDARG ARGOPT TRLBAR))
    (dsearch (BANG RANGE DFLALL WHOLEFOLD EXTRA CMDWIN))
    (dsplit (BANG RANGE DFLALL WHOLEFOLD EXTRA))
    (earlier (TRLBAR EXTRA NOSPC CMDWIN))
    (echo (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (echoerr (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (echohl (EXTRA TRLBAR SBOXOK CMDWIN))
    (echomsg (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (echon (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (edit (BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (else (TRLBAR SBOXOK CMDWIN))
    (elseif (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (emenu (NEEDARG EXTRA TRLBAR NOTRLCOM RANGE NOTADR CMDWIN))
    (endfor (TRLBAR SBOXOK CMDWIN))
    (endfunction (TRLBAR CMDWIN))
    (endif (TRLBAR SBOXOK CMDWIN))
    (endtry (TRLBAR SBOXOK CMDWIN))
    (endwhile (TRLBAR SBOXOK CMDWIN))
    (enew (BANG TRLBAR))
    (ex (BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (execute (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (exit (RANGE WHOLEFOLD BANG FILE1 ARGOPT DFLALL TRLBAR CMDWIN))
    (exusage (TRLBAR))
    (file (RANGE NOTADR ZEROR BANG FILE1 TRLBAR))
    (files buflist_list (BANG TRLBAR CMDWIN))
    (filetype (EXTRA TRLBAR CMDWIN))
    (finally (TRLBAR SBOXOK CMDWIN))
    (find (RANGE NOTADR BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (finish (TRLBAR SBOXOK CMDWIN))
    (first (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (fixdel do_fixdel (TRLBAR CMDWIN))
    (fold (RANGE WHOLEFOLD TRLBAR SBOXOK CMDWIN))
    (foldclose (RANGE BANG WHOLEFOLD TRLBAR SBOXOK CMDWIN))
    (folddoclosed (RANGE DFLALL NEEDARG EXTRA NOTRLCOM))
    (folddoopen (RANGE DFLALL NEEDARG EXTRA NOTRLCOM))
    (foldopen (RANGE BANG WHOLEFOLD TRLBAR SBOXOK CMDWIN))
    (for (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (function (EXTRA BANG CMDWIN))
    (global (RANGE WHOLEFOLD BANG EXTRA DFLALL SBOXOK CMDWIN))
    (goto (RANGE NOTADR COUNT TRLBAR SBOXOK CMDWIN))
    (grep (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (grepadd (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (gui (BANG FILES EDITCMD ARGOPT TRLBAR CMDWIN))
    (gvim (BANG FILES EDITCMD ARGOPT TRLBAR CMDWIN))
    (hardcopy (RANGE COUNT EXTRA TRLBAR DFLALL BANG))
    (help (BANG EXTRA NOTRLCOM))
    (helpfind (EXTRA NOTRLCOM))
    (helpgrep (EXTRA NOTRLCOM NEEDARG))
    (helptags (NEEDARG FILES TRLBAR CMDWIN))
    (hide (BANG EXTRA NOTRLCOM))
    (highlight (BANG EXTRA TRLBAR SBOXOK CMDWIN))
    (history (EXTRA TRLBAR CMDWIN))
    (iabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (iabclear (EXTRA TRLBAR CMDWIN))
    (if (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (ijump (BANG RANGE DFLALL WHOLEFOLD EXTRA))
    (ilist (BANG RANGE DFLALL WHOLEFOLD EXTRA CMDWIN))
    (imap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (imapclear (EXTRA TRLBAR CMDWIN))
    (imenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (inoreabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (inoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (inoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (insert (BANG RANGE TRLBAR CMDWIN MODIFY))
    (intro (TRLBAR CMDWIN))
    (isearch (BANG RANGE DFLALL WHOLEFOLD EXTRA CMDWIN))
    (isplit (BANG RANGE DFLALL WHOLEFOLD EXTRA))
    (iunabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (iunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (iunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (join (BANG RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN MODIFY))
    (jumps (TRLBAR CMDWIN))
    (k (RANGE WORD1 TRLBAR SBOXOK CMDWIN))
    (keepalt (NEEDARG EXTRA NOTRLCOM))
    (keepjumps (NEEDARG EXTRA NOTRLCOM))
    (keepmarks (NEEDARG EXTRA NOTRLCOM))
    (lNext (RANGE NOTADR COUNT TRLBAR BANG))
    (lNfile (RANGE NOTADR COUNT TRLBAR BANG))
    (laddbuffer (RANGE NOTADR WORD1 TRLBAR))
    (laddexpr (NEEDARG WORD1 NOTRLCOM TRLBAR))
    (laddfile (TRLBAR FILE1))
    (language (EXTRA TRLBAR CMDWIN))
    (last (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (later (TRLBAR EXTRA NOSPC CMDWIN))
    (lbuffer (BANG RANGE NOTADR WORD1 TRLBAR))
    (lcd (BANG FILE1 TRLBAR CMDWIN))
    (lchdir (BANG FILE1 TRLBAR CMDWIN))
    (lclose (RANGE NOTADR COUNT TRLBAR))
    (lcscope do_cscope (EXTRA NOTRLCOM XFILE))
    (left (TRLBAR RANGE WHOLEFOLD EXTRA CMDWIN MODIFY))
    (leftabove (NEEDARG EXTRA NOTRLCOM))
    (let (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (lexpr (NEEDARG WORD1 NOTRLCOM TRLBAR BANG))
    (lfile (TRLBAR FILE1 BANG))
    (lfirst (RANGE NOTADR COUNT TRLBAR BANG))
    (lgetbuffer (RANGE NOTADR WORD1 TRLBAR))
    (lgetexpr (NEEDARG WORD1 NOTRLCOM TRLBAR))
    (lgetfile (TRLBAR FILE1))
    (lgrep (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (lgrepadd (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (lhelpgrep (EXTRA NOTRLCOM NEEDARG))
    (list (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN))
    (ll (RANGE NOTADR COUNT TRLBAR BANG))
    (llast (RANGE NOTADR COUNT TRLBAR BANG))
    (llist qf_list (BANG EXTRA TRLBAR CMDWIN))
    (lmake (BANG EXTRA NOTRLCOM TRLBAR XFILE))
    (lmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (lmapclear (EXTRA TRLBAR CMDWIN))
    (lnewer qf_age (RANGE NOTADR COUNT TRLBAR))
    (lnext (RANGE NOTADR COUNT TRLBAR BANG))
    (lnfile (RANGE NOTADR COUNT TRLBAR BANG))
    (lnoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (loadkeymap (CMDWIN))
    (loadview (FILE1 TRLBAR))
    (lockmarks (NEEDARG EXTRA NOTRLCOM))
    (lockvar (BANG EXTRA NEEDARG SBOXOK CMDWIN))
    (lolder qf_age (RANGE NOTADR COUNT TRLBAR))
    (lopen (RANGE NOTADR COUNT TRLBAR))
    (lpfile (RANGE NOTADR COUNT TRLBAR BANG))
    (lprevious (RANGE NOTADR COUNT TRLBAR BANG))
    (lrewind (RANGE NOTADR COUNT TRLBAR BANG))
    (ls buflist_list (BANG TRLBAR CMDWIN))
    (ltag (NOTADR TRLBAR BANG WORD1))
    (lunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (lvimgrep (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (lvimgrepadd (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (lwindow (RANGE NOTADR COUNT TRLBAR))
    (macaction (EXTRA NOSPC NEEDARG))
    (macmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (make (BANG EXTRA NOTRLCOM TRLBAR XFILE))
    (map (BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (mapclear (EXTRA BANG TRLBAR CMDWIN))
    (mark (RANGE WORD1 TRLBAR SBOXOK CMDWIN))
    (marks do_marks (EXTRA TRLBAR CMDWIN))
    (match (RANGE NOTADR EXTRA CMDWIN))
    (menu (RANGE NOTADR ZEROR BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (menutranslate (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (messages (TRLBAR CMDWIN))
    (mkexrc (BANG FILE1 TRLBAR CMDWIN))
    (mksession (BANG FILE1 TRLBAR))
    (mkspell (BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (mkview (BANG FILE1 TRLBAR))
    (mkvimrc (BANG FILE1 TRLBAR CMDWIN))
    (mode (WORD1 TRLBAR CMDWIN))
    (move (RANGE WHOLEFOLD EXTRA TRLBAR CMDWIN MODIFY))
    (mzfile (RANGE FILE1 NEEDARG CMDWIN))
    (mzscheme (RANGE EXTRA DFLALL NEEDARG CMDWIN SBOXOK))
    (nbkey (EXTRA NOTADR NEEDARG))
    (new (BANG FILE1 RANGE NOTADR EDITCMD ARGOPT TRLBAR))
    (next (RANGE NOTADR BANG FILES EDITCMD ARGOPT TRLBAR))
    (nmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (nmapclear (EXTRA TRLBAR CMDWIN))
    (nmenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (nnoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (nnoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (noautocmd (NEEDARG EXTRA NOTRLCOM))
    (nohlsearch (TRLBAR SBOXOK CMDWIN))
    (noreabbrev (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (noremap (BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (noremenu (RANGE NOTADR ZEROR BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (normal (RANGE BANG EXTRA NEEDARG NOTRLCOM USECTRLV SBOXOK CMDWIN))
    (number (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN))
    (nunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (nunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (oldfiles (BANG TRLBAR SBOXOK CMDWIN))
    (omap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (omapclear (EXTRA TRLBAR CMDWIN))
    (omenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (only (BANG TRLBAR))
    (onoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (onoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (open (RANGE EXTRA))
    (options (TRLBAR))
    (ounmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (ounmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (pclose (BANG TRLBAR))
    (pedit (BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (perl (RANGE EXTRA DFLALL NEEDARG SBOXOK CMDWIN))
    (perldo (RANGE EXTRA DFLALL NEEDARG CMDWIN))
    (pop (RANGE NOTADR BANG COUNT TRLBAR ZEROR))
    (popup (NEEDARG EXTRA BANG TRLBAR NOTRLCOM CMDWIN))
    (ppop (RANGE NOTADR BANG COUNT TRLBAR ZEROR))
    (preserve (TRLBAR))
    (previous (EXTRA RANGE NOTADR COUNT BANG EDITCMD ARGOPT TRLBAR))
    (print (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN SBOXOK))
    (profdel (EXTRA TRLBAR CMDWIN))
    (profile (BANG EXTRA TRLBAR CMDWIN))
    (promptfind gui_mch_find_dialog (EXTRA NOTRLCOM CMDWIN))
    (promptrepl gui_mch_replace_dialog (EXTRA NOTRLCOM CMDWIN))
    (psearch (BANG RANGE WHOLEFOLD DFLALL EXTRA))
    (ptNext (RANGE NOTADR BANG TRLBAR ZEROR))
    (ptag (RANGE NOTADR BANG WORD1 TRLBAR ZEROR))
    (ptfirst (RANGE NOTADR BANG TRLBAR ZEROR))
    (ptjump (BANG TRLBAR WORD1))
    (ptlast (BANG TRLBAR))
    (ptnext (RANGE NOTADR BANG TRLBAR ZEROR))
    (ptprevious (RANGE NOTADR BANG TRLBAR ZEROR))
    (ptrewind (RANGE NOTADR BANG TRLBAR ZEROR))
    (ptselect (BANG TRLBAR WORD1))
    (put (RANGE WHOLEFOLD BANG REGSTR TRLBAR ZEROR CMDWIN MODIFY))
    (pwd (TRLBAR CMDWIN))
    (pyfile (RANGE FILE1 NEEDARG CMDWIN))
    (python (RANGE EXTRA NEEDARG CMDWIN))
    (qall (BANG TRLBAR CMDWIN))
    (quit (BANG TRLBAR CMDWIN))
    (quitall (BANG TRLBAR))
    (read (BANG RANGE WHOLEFOLD FILE1 ARGOPT TRLBAR ZEROR CMDWIN MODIFY))
    (recover (BANG FILE1 TRLBAR))
    (redir (BANG FILES TRLBAR CMDWIN))
    (redo (TRLBAR CMDWIN))
    (redraw (BANG TRLBAR CMDWIN))
    (redrawstatus (BANG TRLBAR CMDWIN))
    (registers (EXTRA NOTRLCOM TRLBAR CMDWIN))
    (resize (RANGE NOTADR TRLBAR WORD1))
    (retab (TRLBAR RANGE WHOLEFOLD DFLALL BANG WORD1 CMDWIN MODIFY))
    (return (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (rewind (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (right (TRLBAR RANGE WHOLEFOLD EXTRA CMDWIN MODIFY))
    (rightbelow (NEEDARG EXTRA NOTRLCOM))
    (ruby (RANGE EXTRA NEEDARG CMDWIN))
    (rubydo (RANGE DFLALL EXTRA NEEDARG CMDWIN))
    (rubyfile (RANGE FILE1 NEEDARG CMDWIN))
    (runtime (BANG NEEDARG FILES TRLBAR SBOXOK CMDWIN))
    (rviminfo (BANG FILE1 TRLBAR CMDWIN))
    (sNext (EXTRA RANGE NOTADR COUNT BANG EDITCMD ARGOPT TRLBAR))
    (sall (RANGE NOTADR COUNT TRLBAR))
    (sandbox (NEEDARG EXTRA NOTRLCOM))
    (sargument (BANG RANGE NOTADR COUNT EXTRA EDITCMD ARGOPT TRLBAR))
    (saveas (BANG DFLALL FILE1 ARGOPT CMDWIN TRLBAR))
    (sbNext (RANGE NOTADR COUNT TRLBAR))
    (sball (RANGE NOTADR COUNT TRLBAR))
    (sbfirst (TRLBAR))
    (sblast (TRLBAR))
    (sbmodified (RANGE NOTADR COUNT TRLBAR))
    (sbnext (RANGE NOTADR COUNT TRLBAR))
    (sbprevious (RANGE NOTADR COUNT TRLBAR))
    (sbrewind (TRLBAR))
    (sbuffer (BANG RANGE NOTADR BUFNAME BUFUNL COUNT EXTRA TRLBAR))
    (scriptencoding (WORD1 TRLBAR CMDWIN))
    (scriptnames (TRLBAR CMDWIN))
    (scscope do_scscope (EXTRA NOTRLCOM))
    (set (TRLBAR EXTRA CMDWIN SBOXOK))
    (setfiletype (TRLBAR EXTRA NEEDARG CMDWIN))
    (setglobal (TRLBAR EXTRA CMDWIN))
    (setlocal (TRLBAR EXTRA CMDWIN))
    (sfind (BANG FILE1 RANGE NOTADR EDITCMD ARGOPT TRLBAR))
    (sfirst (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (shell (TRLBAR CMDWIN))
    (sign (NEEDARG RANGE NOTADR EXTRA CMDWIN))
    (silent (NEEDARG EXTRA BANG NOTRLCOM SBOXOK CMDWIN))
    (simalt (NEEDARG WORD1 TRLBAR CMDWIN))
    (slast (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (sleep (RANGE NOTADR COUNT EXTRA TRLBAR CMDWIN))
    (smagic (RANGE WHOLEFOLD EXTRA CMDWIN))
    (smap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (smapclear (EXTRA TRLBAR CMDWIN))
    (smenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (snext (RANGE NOTADR BANG FILES EDITCMD ARGOPT TRLBAR))
    (sniff (EXTRA TRLBAR))
    (snomagic (RANGE WHOLEFOLD EXTRA CMDWIN))
    (snoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (snoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (sort (RANGE DFLALL WHOLEFOLD BANG EXTRA NOTRLCOM MODIFY))
    (source (BANG FILE1 TRLBAR SBOXOK CMDWIN))
    (spelldump (BANG TRLBAR))
    (spellgood (BANG RANGE NOTADR NEEDARG EXTRA TRLBAR))
    (spellinfo (TRLBAR))
    (spellrepall (TRLBAR))
    (spellundo (BANG RANGE NOTADR NEEDARG EXTRA TRLBAR))
    (spellwrong (BANG RANGE NOTADR NEEDARG EXTRA TRLBAR))
    (split (BANG FILE1 RANGE NOTADR EDITCMD ARGOPT TRLBAR))
    (sprevious (EXTRA RANGE NOTADR COUNT BANG EDITCMD ARGOPT TRLBAR))
    (srewind (EXTRA BANG EDITCMD ARGOPT TRLBAR))
    (stag (RANGE NOTADR BANG WORD1 TRLBAR ZEROR))
    (startgreplace (BANG TRLBAR CMDWIN))
    (startinsert (BANG TRLBAR CMDWIN))
    (startreplace (BANG TRLBAR CMDWIN))
    (stjump (BANG TRLBAR WORD1))
    (stop (TRLBAR BANG CMDWIN))
    (stopinsert (BANG TRLBAR CMDWIN))
    (stselect (BANG TRLBAR WORD1))
    (substitute (RANGE WHOLEFOLD EXTRA CMDWIN))
    (sunhide (RANGE NOTADR COUNT TRLBAR))
    (sunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (sunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (suspend (TRLBAR BANG CMDWIN))
    (sview (NEEDARG RANGE NOTADR BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (swapname (TRLBAR CMDWIN))
    (syncbind (TRLBAR))
    (syntax (EXTRA NOTRLCOM CMDWIN))
    (t (RANGE WHOLEFOLD EXTRA TRLBAR CMDWIN MODIFY))
    (tNext (RANGE NOTADR BANG TRLBAR ZEROR))
    (tab (NEEDARG EXTRA NOTRLCOM))
    (tabNext (RANGE NOTADR COUNT TRLBAR))
    (tabclose (RANGE NOTADR COUNT BANG TRLBAR CMDWIN))
    (tabdo (NEEDARG EXTRA NOTRLCOM))
    (tabedit (BANG FILE1 RANGE NOTADR ZEROR EDITCMD ARGOPT TRLBAR))
    (tabfind (BANG FILE1 RANGE NOTADR ZEROR EDITCMD ARGOPT NEEDARG TRLBAR))
    (tabfirst (TRLBAR))
    (tablast (TRLBAR))
    (tabmove (RANGE NOTADR ZEROR COUNT TRLBAR ZEROR))
    (tabnew (BANG FILE1 RANGE NOTADR ZEROR EDITCMD ARGOPT TRLBAR))
    (tabnext (RANGE NOTADR COUNT TRLBAR))
    (tabonly (BANG TRLBAR CMDWIN))
    (tabprevious (RANGE NOTADR COUNT TRLBAR))
    (tabrewind (TRLBAR))
    (tabs (TRLBAR CMDWIN))
    (tag (RANGE NOTADR BANG WORD1 TRLBAR ZEROR))
    (tags do_tags (TRLBAR CMDWIN))
    (tcl (RANGE EXTRA NEEDARG CMDWIN))
    (tcldo (RANGE DFLALL EXTRA NEEDARG CMDWIN))
    (tclfile (RANGE FILE1 NEEDARG CMDWIN))
    (tearoff (NEEDARG EXTRA TRLBAR NOTRLCOM CMDWIN))
    (tfirst (RANGE NOTADR BANG TRLBAR ZEROR))
    (throw (EXTRA NEEDARG SBOXOK CMDWIN))
    (tjump (BANG TRLBAR WORD1))
    (tlast (BANG TRLBAR))
    (tmenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (tnext (RANGE NOTADR BANG TRLBAR ZEROR))
    (topleft (NEEDARG EXTRA NOTRLCOM))
    (tprevious (RANGE NOTADR BANG TRLBAR ZEROR))
    (trewind (RANGE NOTADR BANG TRLBAR ZEROR))
    (try (TRLBAR SBOXOK CMDWIN))
    (tselect (BANG TRLBAR WORD1))
    (tunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (unabbreviate (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (undo (RANGE NOTADR COUNT ZEROR TRLBAR CMDWIN))
    (undojoin (TRLBAR CMDWIN))
    (undolist (TRLBAR CMDWIN))
    (unhide (RANGE NOTADR COUNT TRLBAR))
    (unlet (BANG EXTRA NEEDARG SBOXOK CMDWIN))
    (unlockvar (BANG EXTRA NEEDARG SBOXOK CMDWIN))
    (unmap (BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (unmenu (BANG EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (unsilent (NEEDARG EXTRA NOTRLCOM SBOXOK CMDWIN))
    (update (RANGE WHOLEFOLD BANG FILE1 ARGOPT DFLALL TRLBAR))
    (verbose (NEEDARG RANGE NOTADR EXTRA NOTRLCOM SBOXOK CMDWIN))
    (version (EXTRA TRLBAR CMDWIN))
    (vertical (NEEDARG EXTRA NOTRLCOM))
    (vglobal (RANGE WHOLEFOLD EXTRA DFLALL CMDWIN))
    (view (BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (vimgrep (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (vimgrepadd (RANGE NOTADR BANG NEEDARG EXTRA NOTRLCOM TRLBAR XFILE))
    (visual (BANG FILE1 EDITCMD ARGOPT TRLBAR))
    (viusage (TRLBAR))
    (vmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (vmapclear (EXTRA TRLBAR CMDWIN))
    (vmenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (vnew (BANG FILE1 RANGE NOTADR EDITCMD ARGOPT TRLBAR))
    (vnoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (vnoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (vsplit (BANG FILE1 RANGE NOTADR EDITCMD ARGOPT TRLBAR))
    (vunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (vunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (wNext (RANGE WHOLEFOLD NOTADR BANG FILE1 ARGOPT TRLBAR))
    (wall do_wqall (BANG TRLBAR CMDWIN))
    (while (EXTRA NOTRLCOM SBOXOK CMDWIN))
    (wincmd (NEEDARG WORD1 RANGE NOTADR))
    (windo (BANG NEEDARG EXTRA NOTRLCOM))
    (winpos (EXTRA TRLBAR CMDWIN))
    (winsize (EXTRA NEEDARG TRLBAR))
    (wnext (RANGE NOTADR BANG FILE1 ARGOPT TRLBAR))
    (wprevious (RANGE NOTADR BANG FILE1 ARGOPT TRLBAR))
    (wq (RANGE WHOLEFOLD BANG FILE1 ARGOPT DFLALL TRLBAR))
    (wqall do_wqall (BANG FILE1 ARGOPT DFLALL TRLBAR))
    (write (RANGE WHOLEFOLD BANG FILE1 ARGOPT DFLALL TRLBAR CMDWIN))
    (wsverb (EXTRA NOTADR NEEDARG))
    (wviminfo (BANG FILE1 TRLBAR CMDWIN))
    (xall do_wqall (BANG TRLBAR))
    (xit (RANGE WHOLEFOLD BANG FILE1 ARGOPT DFLALL TRLBAR CMDWIN))
    (xmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (xmapclear (EXTRA TRLBAR CMDWIN))
    (xmenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (xnoremap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (xnoremenu (RANGE NOTADR ZEROR EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (xunmap (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (xunmenu (EXTRA TRLBAR NOTRLCOM USECTRLV CMDWIN))
    (yank (RANGE WHOLEFOLD REGSTR COUNT TRLBAR CMDWIN))
    (z (RANGE WHOLEFOLD EXTRA EXFLAGS TRLBAR CMDWIN))
    (|!| (RANGE WHOLEFOLD BANG FILES CMDWIN))
    (|#| (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN))
    (|&| (RANGE WHOLEFOLD EXTRA CMDWIN MODIFY))
    (|*| (RANGE WHOLEFOLD EXTRA TRLBAR CMDWIN))
    (|<| (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN MODIFY))
    (|=| (RANGE TRLBAR DFLALL EXFLAGS CMDWIN))
    (|>| (RANGE WHOLEFOLD COUNT EXFLAGS TRLBAR CMDWIN MODIFY))
    (|@| (RANGE WHOLEFOLD EXTRA TRLBAR CMDWIN))
    (|~| (RANGE WHOLEFOLD EXTRA CMDWIN MODIFY))
    ;}}}
    ))








; Compiler  ;{{{1
(define (xire-compile x)  ;{{{2
  (match x
    ; FIXME: This dispatching is ad hoc.  It should be replaced with more
    ; sophisticated way and it should be easily extendable.  For example:
    ; (define-ex-command (echo (arg object) ...) ...)
    (('echo . args)
     (list :echo
           (map
             (lambda (x) (cons " " x))
             (map x->vson args))
           "\n")
     )
    (invalid-expression
     (errorf "~A:~A: Invalid expression: ~S"
       (port-name (current-input-port))
       (port-current-line (current-input-port))
       invalid-expression))
    ))








; Core  ;{{{1
(define (make-xire-context)  ;{{{2
  (let1 h (make-hash-table)
    (hash-table-put! h 'exprs (list))
    h))




(define (xire-emit context)  ;{{{2
  (write-tree (reverse (hash-table-get context 'exprs))))




(define (xire-push context x)  ;{{{2
  (hash-table-push! context 'exprs x))




(define (xire-translate)  ;{{{2
  (define context (make-xire-context))

  (port-for-each
    (lambda (x) (xire-push context (xire-compile x)))
    (lambda () (read)))

  (xire-emit context))








; Main  ;{{{1

(define (main args)
  (xire-translate)
  0)








; __END__  ;{{{1
; vim: filetype=scheme foldmethod=marker
